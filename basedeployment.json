{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "artifactsBaseUrl": {
      "type": "string"
    },
    "image": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "authenticationType": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "sshPublicKey": {
      "type": "string"
    },
    "dnsNamePrefix": {
      "type": "string"
    },
    "clientAvailabilitySetName": {
      "type": "string"
    },
    "vmNamePrefix": {
      "type": "string"
    },
    "clientVmSize": {
      "type": "string"
    },
    "clientCount": {
      "type": "int"
    },
    "filesystemName": {
      "type": "string"
    },
    "mgsIpAddress": {
      "type": "string"
    },
    "existingVnetResourceGroupName": {
      "type": "string"
    },
    "existingVnetName": {
      "type": "string"
    },
    "existingSubnetClientsName": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    },
    "clusterIndex": {
      "type": "string"
    }
  },
  "variables": {
    "imageReference_OpenLogic:CentOS-HPC:7.1": {
      "publisher": "OpenLogic",
      "offer": "CentOS-HPC",
      "sku": "7.1",
      "version": "latest"
    },
    "imageReference_OpenLogic:CentOS-HPC:6.5": {
      "publisher": "OpenLogic",
      "offer": "CentOS-HPC",
      "sku": "6.5",
      "version": "latest"
    },
    "imageReference_OpenLogic:CentOS:7.0": {
      "publisher": "OpenLogic",
      "offer": "CentOS",
      "sku": "7.0",
      "version": "latest"
    },
    "imageReference_OpenLogic:CentOS:6.6": {
      "publisher": "OpenLogic",
      "offer": "CentOS",
      "sku": "6.6",
      "version": "latest"
    },
    "imageReference": "[variables(concat('imageReference_',parameters('image')))]",
    "baseUrl": "[concat(parameters('artifactsBaseUrl'),'/')]",
    "vnetID": "[resourceId(parameters('existingVnetResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('existingVnetName'))]",
    "subnetClientsID": "[concat(variables('vnetID'), '/subnets/', parameters('existingSubnetClientsName'))]",
    "scriptUrlLustreClient": "[concat(variables('baseUrl'),'lustre_client.sh')]",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "linuxConfiguration_sshPublicKey": {
      "disablePasswordAuthentication": "true",
      "ssh": {
        "publicKeys": [
          {
            "path": "[variables('sshKeyPath')]",
            "keyData": "[parameters('sshPublicKey')]"
          }
        ]
      }
    },
    "linuxConfiguration_password": { },
    "linuxConfiguration": "[variables(concat('linuxConfiguration_',parameters('authenticationType')))]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmNamePrefix'), parameters('clusterIndex'), 'client0')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsNamePrefix'),'')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmNamePrefix'), parameters('clusterIndex'), 'client0')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('vmNamePrefix'), parameters('clusterIndex'), 'client0')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmNamePrefix'), parameters('clusterIndex'), 'client0'))]"
              },
              "subnet": {
                "id": "[variables('subnetClientsID')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmNamePrefix'), parameters('clusterIndex'), 'client', copyIndex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "clientNicCopy",
        "count": "[sub(parameters('clientCount'),1)]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetClientsID')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNamePrefix'), parameters('clusterIndex'), 'client', copyIndex())]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('clientAvailabilitySetName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('vmNamePrefix'), parameters('clusterIndex'), 'client', copyIndex())]"
      ],
      "copy": {
        "name": "clientVmCopy",
        "count": "[parameters('clientCount')]"
      },
      "tags": {
        "LustreType": "client"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('clientAvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('clientVmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmNamePrefix'), parameters('clusterIndex'), 'client', copyIndex())]",
          "adminUserName": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2015-06-15').primaryEndpoints.blob, 'vhds-client/', concat(parameters('vmNamePrefix'), parameters('clusterIndex'), 'client',copyIndex()), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmNamePrefix'), parameters('clusterIndex'), 'client', copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmNamePrefix'), parameters('clusterIndex'), 'client', copyIndex(), '/init')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('vmNamePrefix'), parameters('clusterIndex'), 'client',copyIndex()))]"
      ],
      "copy": {
        "name": "clientExtensionsCopy",
        "count": "[parameters('clientCount')]"
      },
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.5",
        "settings": {
          "fileUris": [
            "[variables('scriptUrlLustreClient')]"
          ],
          "commandToExecute": "[concat('bash lustre_client.sh', ' -n ', parameters('image'), ' -i ', copyIndex(), ' -d 0', ' -m ', parameters('mgsIpAddress'), ' -l ', reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), 'client', copyIndex()))).ipConfigurations[0].properties.privateIPAddress, ' -f ', parameters('filesystemName'))]"
        }
      }
    }
  ],
  "outputs": {
    "client0DomainName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmNamePrefix'), parameters('clusterIndex'), 'client0'))).dnsSettings.fqdn]",
      "metadata": {
        "description": "SSH to the client0 node using this public IP address and run command mount to see all mount points"
      }
    }
  }
}


